{"version":3,"file":"static/js/118.73d6a7dd.chunk.js","mappings":"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","sources":["pages/RegisterPage.js","hooks/useSignUp.js"],"sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { GoogleButton } from 'react-google-button';\n\nimport { useSignUp } from 'hooks/useSignUp';\n\nconst RegisterPage = () => {\n  const {\n    register,\n    handleSubmit,\n    handleRegistration,\n    handleGoogleSignIn,\n    registerValidation,\n    errors,\n  } = useSignUp();\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"xs\"\n      sx={{\n        marginTop: 4,\n      }}\n    >\n      <Box\n        sx={{\n          padding: 4,\n          bgcolor: '#fff',\n          borderRadius: 2,\n\n          '&:hover': { boxShadow: 'rgb(0 0 0 / 20%) 0px 2px 4px;' },\n        }}\n      >\n        <CssBaseline />\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit(handleRegistration)}\n            sx={{ mt: 3 }}\n            textAlign=\"center\"\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  type=\"text\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  variant=\"standard\"\n                  {...register('name', registerValidation.name)}\n                  error={Boolean(errors.name)}\n                  helperText={errors?.name && errors.name.message}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  type=\"email\"\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  variant=\"standard\"\n                  {...register('email', registerValidation.email)}\n                  error={Boolean(errors.email)}\n                  helperText={errors?.email && errors.email.message}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  variant=\"standard\"\n                  {...register('password', registerValidation.password)}\n                  error={Boolean(errors.password)}\n                  helperText={errors?.password && errors.password.message}\n                />\n              </Grid>\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              fullWidth\n              sx={{\n                mt: 3,\n                mb: 2,\n                bgcolor: '#32a5cf',\n                '&:hover, &:focus': { bgcolor: '#3e61a0' },\n              }}\n            >\n              Sign up\n            </Button>\n\n            <Grid\n              container\n              justifyContent=\"center\"\n              sx={{\n                mt: 3,\n                mb: 1,\n              }}\n            >\n              <GoogleButton\n                label=\"Sign up with Google\"\n                onClick={handleGoogleSignIn}\n              />\n            </Grid>\n\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                  Already have an account? Log In\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\nexport default RegisterPage;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { authOperations } from 'redux/auth';\nimport { UserAuthGoogle } from 'context/AuthContextGoogle';\n\nexport const useSignUp = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { googleSignIn, user } = UserAuthGoogle();\n  const navigate = useNavigate();\n\n  const registerValidation = {\n    name: {\n      required: 'Name is required',\n      maxLength: {\n        value: 50,\n        message: 'This name is too long',\n      },\n    },\n    email: {\n      required: 'Email is required',\n      pattern: {\n        value:\n          //eslint-disable-next-line\n          /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n        message: 'Invalid email format',\n      },\n    },\n    password: {\n      required: 'Password is required',\n      minLength: {\n        value: 8,\n        message: 'Password must have at least 8 characters',\n      },\n    },\n  };\n\n  const handleRegistration = data => dispatch(authOperations.register(data));\n\n  const handleGoogleSignIn = async () => {\n    try {\n      await googleSignIn();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (user?.emailVerified) {\n      async function fetchData() {\n        dispatch(\n          authOperations.register({\n            name: user.displayName,\n            email: user.email,\n            password: user.uid,\n          })\n        );\n      }\n      fetchData();\n    }\n  }, [dispatch, navigate, user]);\n\n  return {\n    register,\n    handleSubmit,\n    handleRegistration,\n    handleGoogleSignIn,\n    registerValidation,\n    errors,\n  };\n};\n"],"names":["dispatch","useDispatch","useForm","register","handleSubmit","errors","formState","UserAuthGoogle","googleSignIn","user","navigate","useNavigate","handleGoogleSignIn","console","log","useEffect","emailVerified","fetchData","authOperations","name","displayName","email","password","uid","handleRegistration","data","registerValidation","required","maxLength","value","message","pattern","minLength","useSignUp","Container","component","maxWidth","sx","marginTop","Box","padding","bgcolor","borderRadius","boxShadow","CssBaseline","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","mt","textAlign","Grid","container","spacing","item","xs","TextField","autoComplete","type","fullWidth","id","label","error","Boolean","helperText","Button","mb","justifyContent","onClick","Link","RouterLink","to"],"sourceRoot":""}